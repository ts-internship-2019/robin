@model iWasHere.Domain.Models.DictionaryCurrency
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Valuta</title>

</head>
<body>
    <h1>@ViewData["Title"]</h1>
    <div class="row">
        <div class="col-xl-6 col-sm-10 offset-sm-3">
            <div class="card bg-danger">
                <div class="card-block" style="background-color: #1b1b1b">
                    <form class="k-form">
                        <fieldset>
                            <p id="currencyAddTitle" class="text-light">Adauga valuta</p>
                            <table>
                                <tr>
                                    <td>
                                        <span class="text-light">Nume Valuta:</span>
                                    </td>
                                    <td>

                                        @(Html.Kendo().TextBox()
                                        .Name("inputCurrencyName")
                                        .HtmlAttributes(new { id = "textBoxCurrencyName", type = "textbox", maxlength = "100" })
                                        )

                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <span class="text-light">Cod valuta:</span>
                                    </td>
                                    <td>
                                        @(Html.Kendo().TextBox()
                                        .Name("inputCurrencyCode")
                                        .HtmlAttributes(new { id = "textBoxCurrencyCode", type = "textbox", maxlength = "100" })
                                        )
                                    </td>
                                  
                                </tr>
                                <tr>
                                    <td>
                                        <span class="text-light">Rata de Curs Valutar:</spanclass="text-light">
                                    </td>
                                   
                                    <td>

                                        @(Html.Kendo().TextBox()
                                        .Name("inputConversionRate")
                                        .HtmlAttributes(new { id = "textBoxConversionRate", type = "textbox", maxlength = "100" })
                                        )

                                    </td>
                                </tr>
                            </table>
                        </fieldset>

                        <div class="text-right">
                            <button type="button" id="btnSaveEdit" class="k-button" onclick="editFunction(1)">Salveaza</button>
                            <button type="button" id="btnSaveNew" class="k-button" onclick="editFunction(2)">Salveaza si nou</button>
                            <button type="button" class="k-button k-primary" onclick="cancel()">Anuleaza</button>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var currentURL = window.location.href;
        var url = new URL(currentURL);
        var modelId = url.searchParams.get("Id");

        if (modelId == 0) {
            document.getElementById("currencyAddTitle").innerHTML = "Adaugare valuta";//pageTitle

        } else {
            document.getElementById("currencyAddTitle").innerHTML = "Editare valuta";
            document.getElementById("btnSaveNew").style.display = "none";//ascunde savenew
            var data = $.ajax({
                type: 'GET',
                url: '/DictionaryCurrency/CurrencyGetById', //numecontroller, fara controller / nume metoda
                data: { txtCurrencyId: modelId }, //parametri metoda cu  numele exact: variabila din javascript ce ii da valoarea
                cache: false,
                success: function (result) {
                    if (data.responseJSON != null) {
                        document.getElementById("textBoxCurrencyName").value = data.responseJSON.CurrencyName;
                        document.getElementById("textBoxCurrencyCode").value = data.responseJSON.CurrencyCode;
                        document.getElementById("textBoxConversionRate").value = data.responseJSON.ConversionRate;
                    }
                    else //id-ul nu este gasit in db
                    {
                        alert("Inregistrarea nu a fost gasita in baza de date!")
                        window.location.href = "/DictionaryCurrency/Currency";
                    }
                    return result;
                }
            });
        }
        function cancel() {
            window.location.href = "/DictionaryCurrency/Currency";
        }
        var eventType;

        function editFunction(eventType) {  //functie ce adauga/editeaza, daca eventtype este 1 se apasa pe salveaza, daca este 2 se apasa pe salveaza si nou
            currencyname = document.getElementById('textBoxCurrencyName').value;
            currencycode = document.getElementById('textBoxCurrencyCode').value;
            conversionrate = document.getElementById('textBoxConversionRate').value;
            if (currencyname == "" || currencycode == "" || conversionrate == "") {
                alert("Campuri necompletate!");
            } else {
                if (modelId != 0 && eventType == 1) {
                    $.ajax({
                        type: 'POST',
                        url: '/DictionaryCurrency/UpdateCurrency',
                        data: { id: modelId, name: currencyname, code: currencycode, conversionrate: conversionrate },
                        cache: false,
                        success: function (result) {
                            alert("Editat cu succes"); return result;
                        }
                    })

                    window.location.href = "/DictionaryCurrency/Currency"; //redirect

                } else if (modelId == 0 && eventType == 1) {
                    $.ajax({
                        type: 'POST',
                        url: '/DictionaryCurrency/AddNewCurrency',
                        data: { currencyname: currencyname, currencycode: currencycode, conversionrate: conversionrate },
                        cache: false,
                        success: function (result) {
                            alert("Adaugat cu Success"); return result;
                        }
                    })
                    window.location.href = "/DictionaryCurrency/Currency";

                } else {
                    $.ajax({
                        type: 'POST',
                        url: '/DictionaryCurrency/AddNewCurrency',
                        data: { currencyname: currencyname, currencycode: currencycode, conversionrate: conversionrate },
                        cache: false,
                        success: function (result) {
                            alert("Adaugat cu Success"); return result;
                        }
                    })
                    window.location.href = "/DictionaryCurrency/CurrencyAdd?Id=0";
                }
            }
        }
    </script>
</body>
</html>





@*@model iWasHere.Domain.Models.DictionaryCurrency


    @{
        ViewData["Title"] = "Adauga Valuta";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    @using (Html.BeginForm("AddValuta", "DictionaryCurrency", FormMethod.Post))
    //                --tot ce urmeaza aici, cand trimit post(pagina inapoi), se duce in actiunea AddValuta
    {

        //    <!--<a href="/">modificat doar pentru un model, IEnumerable era pentru o lista de modele </a> -->


        <h1>Adauga</h1>


        <table class="table">
            <thead>
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.CurrencyCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrencyName)
                    </th>

                </tr>
            </thead>
            <tbody>

                <tr>

                    <td>
                        @Html.EditorFor(model => model.CurrencyCode, new { htmlAttributes = new { @class = "form-control" } })
                        <!--<a href="/">//afiseaza si valoarea</a> -->

                    </td>
                    <td>
                        @Html.EditorFor(model => model.CurrencyName, new { htmlAttributes = new { @class = "form-control" } })
                    </td>

                </tr>
                <tr>
                    <td colspan="3">
                        <input type="submit" value="Valuta Noua" />
                    </td>

                <td colspan="3">
                    <a href="" class="go_back"> Anuleaza </a>
                </td>
                        <script type="text/javascript">
                            $(function () {
                                $('.go_back').click(function (e) {
                                    e.preventDefault();
                                    history.go(-1);
                                });
                            });
                        </script>
                </tr>
            </tbody>
        </table>
    }




    @*//GET - Vreau sa imi dai anumite informatii (Serverul ), da-mi Currency cu un anume Id
        //POSt -  o Informatie pe care o trimit la server
        //PAtch - un fel de Post, tratat diferit*@
