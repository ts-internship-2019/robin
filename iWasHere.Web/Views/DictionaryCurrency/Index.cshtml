@(Html.Kendo().Button()
        .Name("iconTextButton")
        .Tag("a")
        .Icon("filter")
        .Content("Filtreaza")
        .HtmlAttributes(new { id = "btnFilter", type = "button" })
        .Events(e => e.Click("refresh"))
)

@(Html.Kendo().Button()
        .Name("kendoIconTextButton")
        .Tag("a")
        .Icon("filter-clear")
        .Content("Sterge filtru")
        .HtmlAttributes(new { id = "btnResetFilter", type = "button" })
        .Events(e => e.Click("removeFilter"))
)

@(Html.Kendo().TextBox()
    .Name("inputCurrencyNameFilter")
    .HtmlAttributes(new { id = "inputTextbox", type = "textbox" })
)

<input type="button" value="Valuta Noua" onclick="location.href='@Url.Action("Add", "DictionaryCurrency")'" />


@(Html.Kendo().Grid<iWasHere.Domain.Models.DictionaryCurrency>()
        .Name("CurrencyGrid")
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Pageable()
        .Columns(columns =>
        {
            //columns.Bound(c => c.CurrencyId).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(225);

            //latimea coloanelor din Grid:
            columns.Bound(c => c.CurrencyCode).Title("Codul Valutei").Width(300).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
            columns.Bound(c => c.CurrencyName).Title("Numele Valutei").Width(350).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
        })
        .HtmlAttributes(new { id = "CurrencyGrid", style = "height: 550px;" })
        .Scrollable()
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.CurrencyId))
            .Read(read => read.Action("Currency_Read", "DictionaryCurrency").Data("getFilter"))
            .Destroy(destroy => destroy.Action("Currency_Destroy", "DictionaryCurrency"))
            .Update(update => update.Action("Currency_QuickUpdateId", "DictionaryCurrency"))
            .PageSize(20)
        )
)




<script>

    getFilter = function () {
        var model = {};
        model["txtboxCurrencyName"] = $("#inputTextbox").val();
        return model;
    }

    removeFilter = function () {
        $("#inputTextbox").val("");
        refresh();
    }

    refresh = function () {
        $("#CurrencyGrid").data("kendoGrid").dataSource.read();
        $("#CurrencyGrid").data("kendoGrid").dataSource.page(1);
    }


    ///adaugat pentru EDIT
    saveChanges = function () {
        grid = $("#CurrencyGrid").data("kendoGrid");
        grid.removeRow($(element).closest("tr"));
        grid.dataSource.sync();
    }

</script>
