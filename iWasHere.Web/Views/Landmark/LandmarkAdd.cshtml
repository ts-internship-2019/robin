<h1>@ViewData["Title"]</h1>

<div class="row">

    <div class="col-xl-7 col-sm-10 offset-sm-3 ">
        <div class="card bg-danger">
            <div class="card-block"  style="background-color: #1b1b1b">
                <form class="k-form">
                    <!--#region tabel informatii obiectiv -->
                    <fieldset>
                        <h4 class="text-light"><p id="LandmarkAddTitle"></p> Adaugare obiectiv nou</p></h4>
                        <table align="center">
                            <tr>
                                <td>
                                    <span class="text-light">Numele atractiei : </span>
                                </td>
                                <td>
                                    @(Html.Kendo().TextBox()
                                        .Name("inputLandmarkName")
                                        .HtmlAttributes(new { id = "textBoxLandmarkName", type = "textbox", maxlength = "100", style = "width: 100%" })
                                    )
                                </td>

                            </tr>
                            <tr>
                                <td>  <span class="text-light">Descrierea atractiei : </span></td>
                                <td colspan="2" align="center">
                                    @Html.TextArea("textarea", "", new { @class = "k-textbox", style = "width: 100%;", maxlength = "100", id = "textAreaLandmarkShortDesc" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" align="center">
                                    <div class="box">
                                        <p class="text-light"><b>Incarcare Imagine</b></p>

                                        @*The Upload is able to upload files out-of-band using the
                                        HTML5 File API with fallback for legacy browsers.

                                        You need to configure save action that will receive
                                        the uploaded files.
                                        An optional remove action is also available.*@
                                    </div>


                                    <input type="file" name="files" id="files" />
                                    @*<input type="button" value="Upload Selected Files" class="k-button" onclick="uploadSelected()" />*@


                                    <style>
                                        .k-clear-selected, .k-upload-selected {
                                            display: none !important;
                                        }
                                    </style>



                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">
                                        @(Html.Kendo().CheckBox()
                                               .Name("eq1")
                                               .Checked(true)

                                                       .HtmlAttributes(new { id = "checkTicket", onclick = "myFunction()" })
                                        )
                                        Cu bilet de intrare
                                    </p>
                                </td>
                            </tr>
                            <tr id="trTicketCost1">
                                <td>
                                    <p class="text-light">Costul biletului de acces: </p>
                                </td>
                                <td>
                                    @(Html.Kendo().TextBox()
                                    .Name("inputLandmarkName")
                                    .HtmlAttributes(new { id = "textBoxTicketCost", type = "textbox", maxlength = "20" , style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                            <tr id="trTicketCost2">
                                <td>
                                    <p class="text-light">Tip de valuta</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                              .Name("cmbCurrency")
                                              .DataTextField("CurrencyName")
                                              .DataValueField("CurrencyId")
                                              .OptionLabel("Selectati tipul de valuta.")
                                              .DataSource(source =>
                                              {
                                                  source.Read(read =>
                                                  {
                                                      read.Action("CmbCurrency", "Landmark");
                                                  });
                                              })

                                              .HtmlAttributes(new { id = "cmbCurrency", style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                            <tr id="trTicketCost3">
                                <td>
                                    <p  class="text-light">Tip de bilet</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                              .Name("TicketType")
                                              .DataTextField("TicketName")
                                              .DataValueField("TicketTypeId")
                                              .OptionLabel("Selectati tipul de bilet.")
                                              .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("CmbTicketType", "Ticket");
                                                  });
                                              })

                                              .HtmlAttributes(new { id = "cmbTicketType", style = "width: 100%" })

                                    )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p  class="text-light">Tip de atractie:</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                              .Name("landmarkDetailFilter")
                                              .DataTextField("ItemName")
                                              .DataValueField("ItemId")
                                              .OptionLabel("Selectati tipul de atractie.")
                                              .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("CmbLandmarkDetail", "Landmark");
                                                  });
                                              })

                                              .HtmlAttributes(new { id = "cmbLandmarkDetail", style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p  class="text-light">Tip zona de atractie</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                              .Name("attractionfilter")
                                              .DataTextField("AttractionName")
                                              .DataValueField("AttractionTypeId")
                                              .OptionLabel("Selectati tipul de zona.")
                                              .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("CmbAttraction", "Landmark");
                                                  });
                                              })

                                              .HtmlAttributes(new { id = "cmbAttraction", style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">Interval vizitare:</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                              .Name("availabilityFilter")
                                              .DataTextField("AvailabilityName")
                                              .DataValueField("AvailabilityId")
                                             .OptionLabel("Selectati intervalul")
                                              .DataSource(source =>
                                                  {
                                                      source.Read(read =>
                                                      {
                                                          read.Action("CmbAvailability", "Landmark");
                                                  });
                                              })
                                               .HtmlAttributes(new { id = "cmbAvailability", style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">Tara :</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                           .Name("countryFilter")
                                           .DataTextField("CountryName")
                                           .DataValueField("CountryId")
                                           .OptionLabel("Selectati tara")
                                           .DataSource(source =>
                                           {
                                               source.Read(read =>
                                               {
                                                   read.Action("cmbCountry", "DictionaryCounty");
                                               });
                                           })
                                           .HtmlAttributes(new { id = "cmbCountry", style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">Judet :</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                           .Name("countyFilter")
                                           .DataTextField("CountyName")
                                           .DataValueField("CountyId")
                                           .OptionLabel("Selectati judetul")
                                           .DataSource(source =>
                                               {
                                                   source.Read(read =>
                                                   {
                                                       read.Action("CmbCountyByCountry", "Landmark").Data("filterCounty");

                                               }).ServerFiltering(true);
                                           })
                                           .Enable(false)
                                           .AutoBind(false)
                                           .NoDataTemplate("Nu s-a gasit nici un judet pentru aceasta tara")
                                           .CascadeFrom("cmbCountry")
                                           .HtmlAttributes(new { id = "cmbCounty", style = "width: 100%" })
                                    )
                                    <script>
                                        function filterCounty() {
                                            return {
                                                country: $("#cmbCountry").val()
                                            };
                                        }
                                    </script>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">Oras :</p>
                                </td>
                                <td>
                                    @(Html.Kendo().DropDownList()
                                           .Name("cityFilter")
                                           .DataTextField("CityName")
                                           .DataValueField("CityId")
                                           .OptionLabel("Selectati orasul")
                                           .DataSource(source =>
                                               {
                                                   source.Read(read =>
                                                   {
                                                       read.Action("CmbCityByCounty", "Landmark").Data("filterCity");
                                               })
                                                   .ServerFiltering(true);
                                           })
                                           .Enable(false)
                                           .AutoBind(false)
                                           .NoDataTemplate("Nu s-a gasit nici un oras pentru acest judet")
                                           .CascadeFrom("cmbCounty")
                                           .HtmlAttributes(new { id = "cmbCity", style = "width: 100%" })
                                    )
                                    <script>
                                        function filterCity() {
                                            return {
                                                county: $("#cmbCounty").val()
                                            };
                                        }
                                    </script>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">Longitudine</p>
                                </td>
                                <td>
                                    @(Html.Kendo().TextBox()
                                            .Name("inputlong")
                                            .HtmlAttributes(new { id = "textBoxLong", type = "textbox", maxlength = "10" , style = "width: 100%"  })
                                    )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="text-light">Latitudine </p>
                                </td>
                                <td>
                                    @(Html.Kendo().TextBox()
                                            .Name("inputlat")
                                            .HtmlAttributes(new { id = "textBoxLat", type = "textbox", maxlength = "20" , style = "width: 100%" })
                                    )
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                    <!--#endregion -->
                    <div class="text-right">
                        <br />
                        <button type="button" class="k-button k-primary" onclick="cancel()">Anuleaza</button>
                        <button type="button" id="btnSaveEdit" class="k-button" onclick="editFunction()">Salveaza</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var currentURL = window.location.href;
    var url = new URL(currentURL);
    var landmarkId = url.searchParams.get("Id");
    var imgUrl;

    function onUpload(e) {
        e.data = {
            LandmarkId: $(landmarkId).val()
        };

    }
    if (landmarkId == 0) {
        document.getElementById("LandmarkAddTitle").innerHTML = "<b> Adauga un nou  obiectiv</b>";//pageTitle

    } else {
        document.getElementById("LandmarkAddTitle").innerHTML = "<b>Editeaza obiectiv</b>";
         var data = $.ajax({
                type: 'GET',
                url: '/Landmark/GetLandmarkByIdEdit', 
                data: { landmarkId: landmarkId }, 
                cache: false,
                success: function (result) {
                    if (data.responseJSON != null) {
                        document.getElementById("textBoxLandmarkName").value = data.responseJSON.LandmarkName; 
                        document.getElementById("textAreaLandmarkShortDesc").value = data.responseJSON.LandmarkShortDescription;
                        document.getElementById("cmbLandmarkDetail").value = data.responseJSON.DictionaryItemId; 
                        document.getElementById("cmbAttraction").value = data.responseJSON.DictionaryAttractionTypeId;
                        document.getElementById("cmbAvailability").value = data.responseJSON.DictionaryAvailabilityId; 
                        document.getElementById("textBoxLong").value = data.responseJSON.Longitude;
                        document.getElementById("textBoxLat").value = data.responseJSON.Latitude; 
                        if (data.responseJSON.TicketId == null) { document.getElementById("checkTicket").checked = false; myFunction(); }
                        else
                        {
                            document.getElementById("trTicketCost1").style.visibility = "visible";
                            document.getElementById("trTicketCost1").style.position = "static";
                            document.getElementById("trTicketCost2").style.visibility = "visible";
                            document.getElementById("trTicketCost2").style.position = "static";
                            document.getElementById("trTicketCost3").style.visibility = "visible";
                            document.getElementById("trTicketCost3").style.position = "static";
                            var ticketdata = $.ajax({
                                type: 'GET',
                                url: '/Landmark/GetCurrencyTicketType', 
                                data: { ticketId: data.responseJSON.TicketId }, 
                                cache: false,
                                success: function (result)
                                {   document.getElementById("cmbCurrency").value = ticketdata.responseJSON.CurrencyId;
                                    $("#cmbCurrency").data("kendoDropDownList").value(ticketdata.responseJSON.CurrencyId);
                                    document.getElementById("cmbTicketType").value = ticketdata.responseJSON.TicketTypeId;
                                    $("#cmbTicketType").data("kendoDropDownList").value(ticketdata.responseJSON.TicketTypeId);
                                    $("#textBoxTicketCost").val(ticketdata.responseJSON.TicketPrice);
                                    return result
                                }
                            });

                        }
                         var countydata = $.ajax({
                                type: 'GET',
                                url: '/Landmark/CountyCityGetById', 
                                data: { txtCityId: data.responseJSON.DictionaryCityId },
                                cache: false,
                                             success: function (result)
                                             {
                                                  
                                                  var countrydata = $.ajax({
                                                    type: 'GET',
                                                    url: '/Landmark/CountryCountyGetById', 
                                                    data: { txtCountyId: countydata.responseJSON.CountyId},
                                                    cache: false,
                                                                 success: function (result)
                                                                 {
                                                                     document.getElementById("cmbCountry").value = countrydata.responseJSON.CountryId;
                                                                     $("#cmbCountry").data("kendoDropDownList").value(countrydata.responseJSON.CountryId);
                                                                     document.getElementById("cmbCounty").value = countydata.responseJSON.CountyId;
                                                                     $("#cmbCounty").data("kendoDropDownList").value(countydata.responseJSON.CountyId);
                                                                     document.getElementById("cmbCity").value = data.responseJSON.DictionaryCityId;
                                                                     $("#cmbCity").data("kendoDropDownList").value(data.responseJSON.DictionaryCityId);
                                                                 }

                            })
                        }
                    })

                }
                else {
                    alert("Inregistrarea nu a fost gasita in baza de date!")
                    window.location.href = "/Landmark/Landmark";
                }
                return result;
            }
        });
    }
    function myFunction() {
        var checkBox = document.getElementById("checkTicket");

        if (checkBox.checked == false) {
            document.getElementById("textBoxTicketCost").value = "";
            document.getElementById("trTicketCost1").style.visibility = "hidden";
            document.getElementById("trTicketCost1").style.position = "absolute";
            document.getElementById("trTicketCost2").style.visibility = "hidden";
            document.getElementById("trTicketCost2").style.position = "absolute";
            document.getElementById("trTicketCost3").style.visibility = "hidden";
            document.getElementById("trTicketCost3").style.position = "absolute";
        } else {
            document.getElementById("trTicketCost1").style.visibility = "visible";
            document.getElementById("trTicketCost1").style.position = "static";
            document.getElementById("trTicketCost2").style.visibility = "visible";
            document.getElementById("trTicketCost2").style.position = "static";
            document.getElementById("trTicketCost3").style.visibility = "visible";
            document.getElementById("trTicketCost3").style.position = "static";
        }
    }
    function cancel() {

        var file_data = $("#imguploader").prop("files")[0];
        var form_data = new FormData();
        form_data.append("file", file_data);

        $.ajax({
            type: 'POST',
            url: '/Upload/Async_Remove',
            data: { files: form_data },
            cache: false,
            success: function (result) {
                return result;
            }
        })

        window.location.href = "/Landmark/Landmark";
    }
    function editFunction()
    { 
                var checkBox = document.getElementById("checkTicket");
				lname = document.getElementById('textBoxLandmarkName').value;
                ldesc = document.getElementById('textAreaLandmarkShortDesc').value;
                if (checkBox.checked == true)
                {
                       var chk = 1;
                       tprice = document.getElementById('textBoxTicketCost').value; tpriceLength = tprice.length;
                       tcurrencyid = document.getElementById('cmbCurrency').value;
                       ttickettypeid = document.getElementById('cmbTicketType').value;
                }
                else
                {
                    var chk = 2;
                }
                lditemid = document.getElementById('cmbLandmarkDetail').value;
                ldattractionid = document.getElementById('cmbAttraction').value;
				ldavailabilty = document.getElementById('cmbAvailability').value;
                llong = document.getElementById('textBoxLong').value; llongLength = llong.length;
                llat = document.getElementById('textBoxLat').value; llatLength = llat.length;
                ldcity = document.getElementById('cmbCity').value;
                if (lname == "" || ldesc == "" || llat == "" || llong == "" || document.getElementById('cmbLandmarkDetail').value == ""  || document.getElementById('cmbAttraction').value == ""   || document.getElementById('cmbAvailability').value == ""   || document.getElementById('cmbCity').value == "" ) 
                {
                        alert("Campuri necompletate!");
                }
                else if (chk==1)
                { //chk 1 se introduce landmark complet cu bilet complet
                    if (document.getElementById('cmbCurrency').value == "" || document.getElementById('cmbTicketType').value == "" || document.getElementById('textBoxTicketCost').value == "") { alert("Campuri necompletate!"); }
                    else if (landmarkId == 0 && llongLength <= 10 && llatLength <= 10 && tpriceLength<=8 && isNaN(tprice)==false&& isNaN(llat)==false&& isNaN(llong)==false) {//landmark nou
                        $.ajax({
                            type: 'POST',
                            url: '/Landmark/AddNewLandmark',
                            data: { landmarkName: lname, LandmarkShortDescription: ldesc, ticketPrice: tprice, currencyId: tcurrencyid, ticketTypeId: ttickettypeid, dictionaryItemId: lditemid, dictionaryAttractionTypeId: ldattractionid, dictionaryAvailability: ldavailabilty, cityId: ldcity, longit: llong, lat: llat },
                            cache: false,
                            success: function (result) {
                                return result;
                            }
                        })

                        $(".k-upload-selected").click();

                        //$.ajax({
                        //    type: 'POST',
                        //    url: '/Async/SaveUploadedImagesDB',
                        //    data: { lmkid: 3 },
                        //    cache: false,
                        //    success: function (result) {
                        //        return result;
                        //    }
                        //})
                        //$(".k-upload-selected").click();

                alert("Obiectiv salvat cu succes!");
                window.location.href = "/Landmark/Landmark";

                    } else if (llongLength <= 10 && llatLength <= 10 && tpriceLength<=8 && isNaN(tprice)==false&& isNaN(llat)==false&& isNaN(llong)==false) {//landmark  cu bilet - edit cu bilet
                        $.ajax({
                            type: 'POST',
                            url: '/Landmark/LandmarkUpdate',
                            data: { landmarkId: landmarkId, landmarkName: lname, LandmarkShortDescription: ldesc, ticketPrice: tprice, currencyId: tcurrencyid, ticketTypeId: ttickettypeid, dictionaryItemId: lditemid, dictionaryAttractionTypeId: ldattractionid, dictionaryAvailability: ldavailabilty, cityId: ldcity, longit: llong, lat: llat },
                            cache: false,
                            success: function (result) {
                                return result;
                            }
                        })
                        alert("Obiectiv editat cu succes!");
                        window.location.href = "/Landmark/Landmark";
                    } else { alert("Campuri completate necorespunzator!");}
                }
                else if (chk==2)
                {// chk 2 se introduce doar landmark
                    if (landmarkId == 0 && llongLength <= 10 && llatLength <= 10&& isNaN(llat)==false&& isNaN(llong)==false) {
                        $.ajax({
                            type: 'POST',
                            url: '/Landmark/AddNewLandmark2',
                            data: { landmarkName: lname, LandmarkShortDescription: ldesc, dictionaryItemId: lditemid, dictionaryAttractionTypeId: ldattractionid, dictionaryAvailability: ldavailabilty, cityId: ldcity, longit: llong, lat: llat },
                            cache: false,
                            success: function (result) {
                                return result;
                            }
                        })
                        $(".k-upload-selected").click();
                        //$.ajax({
                        //    type: 'POST',
                        //    url: '/Async/SaveUploadedImagesDB',
                        //    data: { lmkid: 3 },
                        //    cache: false,
                        //    success: function (result) {
                        //        return result;
                        //    }
                        //})
                        alert("Obiectiv salvat cu succes!");
                        window.location.href = "/Landmark/Landmark";
                    } else if (llongLength <= 10 && llatLength <= 10&& isNaN(llat)==false&& isNaN(llong)==false) {
                        $.ajax({
                            type: 'POST',
                            url: '/Landmark/LandmarkUpdate2',
                            data: { landmarkId: landmarkId, landmarkName: lname, LandmarkShortDescription: ldesc, dictionaryItemId: lditemid, dictionaryAttractionTypeId: ldattractionid, dictionaryAvailability: ldavailabilty, cityId: ldcity, longit: llong, lat: llat },
                            cache: false,
                            success: function (result) {
                                return result;
                            }
                        })
                        alert("Obiectiv editat cu succes!");
                        window.location.href = "/Landmark/Landmark";


                    } else { alert("Campuri completate necorespunzator!");}
                }
    }
   

    
                                            $("#files").kendoUpload({
                                            async: {
                                                saveUrl: "/Upload/Async_Save",     //?id=" + landmarkId2,
                                                removeUrl: "/Upload/Async_Remove",
                                                autoUpload: false
                                            }
                                            //upload: onUpload
                                        })


  </script>

@*<script>
                                            $("#files").kendoUpload({
                                            async: {
                                                saveUrl: "/Upload/Async_Save",     //?id=" + landmarkId2,
                                                removeUrl: "/Upload/Async_Remove",
                                                autoUpload: false
                                            }
                                            //upload: onUpload
                                        })
</script>*@